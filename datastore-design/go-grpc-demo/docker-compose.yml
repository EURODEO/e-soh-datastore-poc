version: '3.8'
name: go-grpc-demo

services:
  timescale:
    image: timescale/timescaledb-ha:pg15-latest
    ports:
      - 5433:5432
    volumes:
      - ts-data:/home/postgres/pgdata/data # works! (persistent)
      #- ts-data:/var/lib/postgresql/data # fails! (not persistent)
      - ./ts-init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=mysecretpassword
      - POSTGRES_DB=data
    restart: on-failure
    healthcheck:
      test: [ "CMD-SHELL", "sh -c pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 1s
      retries: 3
      start_period: 30s   # Failures in 30 seconds do not mark container as unhealthy
    networks:
      datastore-network:

  main:
    build:
      context: .
      dockerfile: Dockerfile.main
    ports:
      - "50050:50050"
    environment:
      - TSDBHOST=timescale
      - TSDBPORT=5432
    restart: on-failure
    healthcheck:
      test: [ "CMD-SHELL", "exit $(/bin/grpc_health_probe -addr=localhost:50050)" ]
      interval: 5s
      timeout: 1s
      retries: 3
      start_period: 30s   # Failures in 30 seconds do not mark container as unhealthy
    networks:
      datastore-network:
    depends_on:
      timescale:
        condition: service_healthy

#  client:
#    build:
#      context: ./
#      dockerfile: examples/clients/python/Dockerfile.client
#    environment:
#      - DSHOST=main
#      - DSPORT=50050
#    networks:
#      datastore-network:
#    depends_on:
#      main:
#        condition: service_healthy

volumes:
  ts-data:

networks:
  datastore-network:
