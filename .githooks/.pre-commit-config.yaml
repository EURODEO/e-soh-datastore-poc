repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      # Formatting
      - id: end-of-file-fixer # Makes sure files end in a newline and only a newline.
      - id: pretty-format-json
        args: ["--autofix", "--indent=4", "--no-ensure-ascii", "--no-sort-keys"] # Formats and sorts your JSON files.
      - id: trailing-whitespace # Trims trailing whitespace.
      # Checks
      - id: check-json # Attempts to load all json files to verify syntax.
      - id: check-merge-conflict # Check for files that contain merge conflict strings.
      - id: check-shebang-scripts-are-executable # Checks that scripts with shebangs are executable.
      - id: check-yaml
        # only checks syntax not load the yaml:
        # https://stackoverflow.com/questions/59413979/how-exclude-ref-tag-from-check-yaml-git-hook
        args: ["--unsafe"] # Parse the yaml files for syntax.

  # reorder-python-imports ~ sort python imports
  - repo: https://github.com/asottile/reorder_python_imports
    rev: v3.11.0
    hooks:
      - id: reorder-python-imports

  # black ~ Formats Python code
  - repo: https://github.com/psf/black
    rev: 23.9.1
    hooks:
      - id: black
        args: ["--line-length=99"]

  # flake8 ~ Enforces the Python PEP8 style guide
  - repo: https://github.com/pycqa/flake8
    rev: 6.1.0
    hooks:
      - id: flake8
        args:
          [
            "--ignore=W503",
            "--max-line-length=99",
          ]

  # hadolint ~ Docker linter
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        args: [
            "--ignore=DL3006", # Always tag the version of an image explicitly
            "--ignore=DL3008", # Pin versions in apt get install.
          ]
#        # Overwrite entry, as it is broken in repository, and will install v2.9.3 instead
#        # https://github.com/hadolint/hadolint/issues/840
#        entry: ghcr.io/hadolint/hadolint:v2.10.0 hadolint
